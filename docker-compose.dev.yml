services:
  # ================================
  # BASE DE DATOS POSTGRESQL (COMENTADO - USANDO PostgreSQL LOCAL)
  # ================================
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: staycumbrecita-postgres-dev
  #   restart: unless-stopped
  #   environment:
  #     POSTGRES_DB: StayAtCumbrecita
  #     POSTGRES_USER: adminCumbrecita
  #     POSTGRES_PASSWORD: 123456
  #   ports:
  #     - "5433:5432"
  #   volumes:
  #     - postgres_dev_data:/var/lib/postgresql/data
  #   networks:
  #     - app-network
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready -U postgres"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # ================================
  # BACKEND NESTJS (DESARROLLO)
  # ================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: builder
    container_name: staycumbrecita-backend-dev
    restart: unless-stopped
    ports:
      - "5001:5001"
    env_file:
      - ./backend/.env
    environment:
      # Base de datos para Docker - Conectar a PostgreSQL local
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_USERNAME: adminCumbrecita
      DB_PASSWORD: 123456
      DB_DATABASE: StayAtCumbrecita
      
      # Configuración de desarrollo
      NODE_ENV: development
      PORT: 5001
      HOST: 0.0.0.0
      
      # Encriptación y seguridad
      ENCRYPTION_KEY: e1db7451791523f747e56420819059db96936f88aefd5bc5e6127b6ee36ce966
      ENCRYPTION_IV: cdda4a1d5dc8108321bafc1321155647
      SALT_ROUNDS: 8
      SECRET_PEPPER: 9189739aa1480bac48969e3e2bc86744
      
      # Cloudinary
      CLOUDINARY_CLOUD_NAME: dgd1qsict
      CLOUDINARY_API_KEY: 312842664577487
      CLOUDINARY_API_SECRET: 4ks_8BgEZv9RminxyRb4n11fydo
      
      # Gmail
      GMAIL_HOST: smtp.gmail.com
      GMAIL_PORT: 587
      GMAIL_USER: testcumbrecita@gmail.com
      GMAIL_PASS: oyxnukaypbqlkwmd
      GMAIL_SECURE: false
      GMAIL_FROM: testcumbrecita@gmail.com
      
      # URLs para Docker
      APP_NAME: Stay At Cumbrecita
      APP_BACKEND_URL: http://backend:5001
      APP_FRONTEND_URL: http://frontend:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - backend_uploads:/app/uploads
    depends_on: []
    networks:
      - app-network
    command: npm run start:dev

  # ================================
  # FRONTEND NEXTJS (DESARROLLO)
  # ================================
  frontend:
    build:
      context: ./frontendStayAtCumbrecita
      dockerfile: Dockerfile
      target: builder
    container_name: staycumbrecita-frontend-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - ./frontendStayAtCumbrecita/.env.local
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:5001
      NEXT_PUBLIC_FRONTEND_URL: http://localhost:3000
      NEXT_TELEMETRY_DISABLED: 1
      
      # URL interna para SSR (comunicación entre contenedores)
      INTERNAL_API_URL: http://backend:5001
      
      # Google Maps API Key
      NEXT_PUBLIC_MAPS_API_GOOGLE_KEY: AIzaSyBlzl53EznHxN3N5-FRJb3tlAARdOXAAWo
    volumes:
      - ./frontendStayAtCumbrecita:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend
    networks:
      - app-network
    command: npm run dev

  # ================================
  # REDIS (DESARROLLO)
  # ================================
  redis:
    image: redis:7-alpine
    container_name: staycumbrecita-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - app-network

# ================================
# VOLUMES
# ================================
volumes:
  # postgres_dev_data:
  #   driver: local
  backend_uploads:
    driver: local

# ================================
# NETWORKS
# ================================
networks:
  app-network:
    driver: bridge 